{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "next/core-web-vitals",
    "next",
    "airbnb",
    "airbnb-typescript",
    "plugin:array-func/recommended",
    "plugin:@typescript-eslint/recommended",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "settings": {
    "next": {
      "rootDir": "./src"
    }
  },
  "plugins": [
    "fp",
    "sort-destructure-keys",
    "simple-import-sort",
    "react",
    "@typescript-eslint",
    "typescript-sort-keys"
  ],
  "env": {
    "browser": true,
    "node": true,
    "es2021": true
  },
  "rules": {
    "typescript-sort-keys/interface": "error",
    "typescript-sort-keys/string-enum": "error",
    "sort-destructure-keys/sort-destructure-keys": 2,
    "@typescript-eslint/no-misused-promises": "off",
    "fp/no-arguments": "error",
    "fp/no-loops": "error",
    "fp/no-delete": "error",
    "no-var": "error",
    "react-hooks/exhaustive-deps": 0,
    "simple-import-sort/imports": ["error", {
      "groups": [
        // style imports
        // import './AddToCart.style'
        [".+\\.module.scss"],

        // anything that starts with @ and lowercase
        // import PropTypes from 'prop-types';
        ["^@?[a-z]"],


        // anything but a dot
        // import { isSignedIn } from 'Util/Auth';
        ["^[^.]"],

        // starting with dot (ignore styles)
        // import AddToCart from './AddToCart.component';
        ["^\\..+(?!\\.module.scss)"]
      ]
    }],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": [
          "const",
          "let",
          "var"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "block",
          "block-like",
          "multiline-block-like",
          "multiline-expression",
          "multiline-const",
          "multiline-let",
          "multiline-var"
        ],
        "next": "return"
      },
      {
        "blankLine": "any",
        "prev": [
          "singleline-const",
          "singleline-let",
          "singleline-var"
        ],
        "next": "*"
      }
    ],
    "react/jsx-curly-spacing": [
      2,
      {
        "when": "always",
        "allowMultiline": false,
        "children": true
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "array": false,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "lines-between-class-members": [
      "error",
      "always"
    ],
    "indent": [
      "error",
      4,
      {
        "ignoredNodes": ["JSXElement", "JSXElement > *", "JSXAttribute", "JSXIdentifier", "JSXNamespacedName", "JSXMemberExpression", "JSXSpreadAttribute", "JSXExpressionContainer", "JSXOpeningElement", "JSXClosingElement", "JSXText", "JSXEmptyExpression", "JSXSpreadChild"]
      }
    ],
    "react/static-property-placement": ["error", "static public field"],
    "react/jsx-props-no-spreading": "off",
    "react/state-in-constructor": "off",
    "no-extra-semi": "error",
    "no-shadow": 0,
    "class-methods-use-this": 0,
    "camelcase": 0,
    "template-curly-spacing": "off",
    "computed-property-spacing": "off",
    "no-case-declarations": "off",
    "comma-dangle": "off",
    "@typescript-eslint/comma-dangle": [
      "error",
      "never"
    ],
    "brace-style": [2, "1tbs", {
      "allowSingleLine": false
    }],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error", { "ignoreRestSiblings": true }],
    "react/react-in-jsx-scope": 0,
    "react/jsx-filename-extension": 0,
    "react/prefer-stateless-function": 0,
    "react/button-has-type": 0,
    "react/jsx-indent": 0,
    "react/jsx-indent-props": 2,
    "import/no-named-as-default": 0,
    "import/order": "off",
    "import/no-cycle": ["error", {
      "maxDepth": 4
    }],
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/indent": 0,
    "import/no-extraneous-dependencies": "off",
    "import/no-named-as-default-member": 0,
    "no-underscore-dangle": "off",
    "react/jsx-max-depth": [2, { "max": 2 }],
    "react/jsx-no-useless-fragment": [2, {
      "max": 2
    }],
    "react/jsx-no-bind": [2, {
      "ignoreDOMComponents": false,
      "ignoreRefs": true,
      "allowArrowFunctions": true,
      "allowFunctions": false,
      "allowBind": false
    }],
    "no-param-reassign": ["error", {
      "props": true,
      "ignorePropertyModificationsFor": ["acc", "sum", "state"]
    }],
    "import/no-unresolved": 0,
    "max-len": [2, {
      "ignoreComments": true,
      "ignoreUrls": true,
      "code": 120
    }]
  }
}
